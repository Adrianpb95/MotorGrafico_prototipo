/*
ADRIAN PONCE BALSEIRO
ESNE G4.3 DDVJ
adrianpb95@gmail.com
3 / 07 / 2018
*/

#ifndef RENDER_MODULE_HEADER
#define RENDER_MODULE_HEADER

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "Module.hpp"
#include "Render_Task.hpp"

////////////////////////////////////////////////////////////
// NameSpaces
////////////////////////////////////////////////////////////
namespace example
{
	class Render_Module : public Module
	{
		////////////////////////////////////////////////////////////
		// Declaracion de variables			
		////////////////////////////////////////////////////////////

	private:

		Render_Task render_task;			///<Tarea de tipo render perteneciente al modulo
		

		////////////////////////////////////////////////////////////
		// Declaracion de funciones			
		////////////////////////////////////////////////////////////

	public:
		
		////////////////////////////////////////////////////////////
		/// \brief	Constructor de Render_Module:	Modulo de tipo render
		///	@param	scene			Escena a la que pertenece
		////////////////////////////////////////////////////////////
		Render_Module(Scene * scene) : Module(scene), render_task(scene) {}

		////////////////////////////////////////////////////////////
		/// \brief	Destructor de Render_Module
		////////////////////////////////////////////////////////////
		~Render_Module() {}	
		
		////////////////////////////////////////////////////////////
		/// \brief	Crea un Modulo de tipo render
		///	@param	scene			Escena a la que pertenece
		////////////////////////////////////////////////////////////
		static shared_ptr<Module> create(Scene * scene)
		{
			return shared_ptr<Module>(new Render_Module(scene));
		}

		////////////////////////////////////////////////////////////
		/// \brief	GETTER de la tarea perteneciente al modulo
		////////////////////////////////////////////////////////////
		Task * getTask() override
		{
			return &render_task;
		}	

		////////////////////////////////////////////////////////////
		/// \brief	Crea un componente de tipo render con informacion de un xml
		///	@param	entity			Entidad a la que añadirle el componente
		///	@param	render_node		Nodo del render desde el que empezar a leer en el xml
		////////////////////////////////////////////////////////////
		void create_component(Entity * entity, xml_node<> * render_node) override;
	};
}

#endif